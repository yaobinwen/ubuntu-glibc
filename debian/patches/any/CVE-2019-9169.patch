From 2aee101ff6075dd97a99982a1ba29e21ec25c52f Mon Sep 17 00:00:00 2001
From: Paul Eggert <eggert@cs.ucla.edu>
Date: Mon, 21 Jan 2019 11:08:13 -0800
Subject: [PATCH] regex: fix read overrun [BZ #24114]

Problem found by AddressSanitizer, reported by Hongxu Chen in:
https://debbugs.gnu.org/34140
* posix/regexec.c (proceed_next_node):
Do not read past end of input buffer.

(cherry picked from commit 583dd860d5b833037175247230a328f0050dbfe9)
---
 ChangeLog       | 8 ++++++++
 posix/regexec.c | 6 ++++--
 2 files changed, 12 insertions(+), 2 deletions(-)

#diff --git a/ChangeLog b/ChangeLog
#index e5011123eb..0ef60fa5ac 100644
#--- a/ChangeLog
#+++ b/ChangeLog
#@@ -1,3 +1,11 @@
#+2019-01-31  Paul Eggert  <eggert@cs.ucla.edu>
#+
#+	regex: fix read overrun [BZ #24114]
#+	Problem found by AddressSanitizer, reported by Hongxu Chen in:
#+	https://debbugs.gnu.org/34140
#+	* posix/regexec.c (proceed_next_node):
#+	Do not read past end of input buffer.
#+
# 2018-11-07  Andreas Schwab  <schwab@suse.de>
# 
# 	[BZ #23864]
--- a/posix/regexec.c
+++ b/posix/regexec.c
@@ -1272,8 +1272,10 @@ proceed_next_node (const re_match_contex
 	      else if (naccepted)
 		{
 		  char *buf = (char *) re_string_get_buffer (&mctx->input);
-		  if (memcmp (buf + regs[subexp_idx].rm_so, buf + *pidx,
-			      naccepted) != 0)
+		  if (mctx->input.valid_len - *pidx < naccepted
+		      || (memcmp (buf + regs[subexp_idx].rm_so, buf + *pidx,
+				  naccepted)
+			  != 0))
 		    return -1;
 		}
 	    }
