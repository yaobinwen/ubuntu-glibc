To be pushed upstream once glibc 2.32 is out.

--- a/hurd/Versions
+++ b/hurd/Versions
@@ -1,8 +1,5 @@
 libc {
   GLIBC_2.0 {
-    # necessary for the Hurd brk implementation
-    _end;
-
     # variables used in macros & inline functions
     __hurd_threadvar_stack_mask; __hurd_threadvar_stack_offset;
 
--- a/sysdeps/mach/hurd/brk.c
+++ b/sysdeps/mach/hurd/brk.c
@@ -19,6 +19,7 @@
 #include <hurd.h>
 #include <hurd/resource.h>
 #include <cthreads.h>		/* For `struct mutex'.  */
+#include <vm_param.h>
 
 
 /* Initial maximum size of the data segment (this is arbitrary).  */
@@ -39,9 +40,7 @@
 
 struct mutex _hurd_brk_lock;
 
-extern int __data_start, _end;
-weak_extern (__data_start)
-static vm_address_t static_data_start;
+static vm_address_t brk_start;
 
 
 /* Set the end of the process's data space to INADDR.
@@ -91,7 +90,7 @@
   rlimit = _hurd_rlimits[RLIMIT_DATA].rlim_cur;
   __mutex_unlock (&_hurd_rlimit_lock);
 
-  if (addr - static_data_start > rlimit)
+  if (addr - brk_start > rlimit)
     {
       /* Need to increase the resource limit.  */
       errno = ENOMEM;
@@ -138,21 +137,18 @@
 
   __mutex_init (&_hurd_brk_lock);
 
-  static_data_start = (vm_address_t) (&__data_start ?: &_end);
+  brk_start = (vm_address_t) BRK_START;
 
   /* If _hurd_brk is already set, don't change it.  The assumption is that
      it was set in a previous run before something like Emacs's unexec was
      called and dumped all the data up to the break at that point.  */
   if (_hurd_brk == 0) {
-    _hurd_brk = (vm_address_t) &_end;
-    if (_hurd_brk < 0x8000000)
-      /* XXX: PIE case, get out of library area */
-      _hurd_brk = 0x8000000;
+    _hurd_brk = (vm_address_t) BRK_START;
   }
 
   pagend = round_page (_hurd_brk);
 
-  _hurd_data_end = round_page (static_data_start + DATA_SIZE);
+  _hurd_data_end = round_page (brk_start + DATA_SIZE);
 
   if (pagend < _hurd_data_end)
     {
--- a/sysdeps/mach/hurd/i386/libc.abilist
+++ b/sysdeps/mach/hurd/i386/libc.abilist
@@ -554,7 +554,6 @@
 GLIBC_2.2.6 _authenticate F
 GLIBC_2.2.6 _dl_mcount_wrapper F
 GLIBC_2.2.6 _dl_mcount_wrapper_check F
-GLIBC_2.2.6 _end D 0x0
 GLIBC_2.2.6 _environ D 0x4
 GLIBC_2.2.6 _exit F
 GLIBC_2.2.6 _flushlbf F
--- /dev/null
+++ b/sysdeps/mach/hurd/i386/vm_param.h
@@ -0,0 +1,24 @@
+/* Copyright (C) 2020 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#ifndef _I386_VM_PARAM_H
+#define _I386_VM_PARAM_H
+
+/* Arbitrary start of the brk. This is after usual binary and library mappings.  */
+#define BRK_START	0x10000000
+
+#endif /* i386/vm_param.h */
